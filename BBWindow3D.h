//**************************************************************************************// Filename:	BBWindow3D.h// Copyright © 1997 <YourNameHere>. All rights reserved.//// Description:	////**************************************************************************************// Revision History:// Thursday, February 6, 1997 - Original//**************************************************************************************#pragma once#include <LWindow.h>#include "Side.h"#if TARGET_CPU_PPC	#include "LQD3DViewerPane.h"	#include <QD3D.h>	#include <QD3DDrawContext.h>	#include <QD3DRenderer.h>	#include <QD3DShader.h>	#include <QD3DCamera.h>	#include <QD3DErrors.h>	#include <QD3DIO.h>	#include <QD3DLight.h>	#include <QD3DGeometry.h>	#include <QD3DGroup.h>	#include <QD3DMath.h>	#include <QD3DSet.h>	#include <QD3DStorage.h>	#include <QD3DTransform.h>	#include <QD3DAcceleration.h>#endifclass BoundingBox;class CReduceApp;class CrystalArray;class Crystal;class BBWindow3D: public PP::LWindow{	public:		class QD3DFailedErr {};		// exception class		class QD3DInitFailedErr {};	// exception class	// Public Enums and Constants		enum { class_ID = 'BW3d' };		// Public Functions		// Stream Constructor for Registrar		static BBWindow3D*	CreateBBWindow3DStream( PP::LStream	*inStream);		//Default Constructor							BBWindow3D();		// Note: Add non-stream constructors here				// Stream Constructor 							BBWindow3D( PP::LStream *inStream );		// Copy Constructor							BBWindow3D(const BBWindow3D& inBBWindow);		//Destructor		virtual				~BBWindow3D();		void				FinishCreateSelf();		Boolean			ObeyCommand(								PP::CommandT	inCommand,								void		*ioParam);		void				FindCommandStatus(								PP::CommandT	inCommand,								Boolean		&outEnabled,								Boolean		&outUsesMark,								UInt16		&outMark,								Str255		outName );	protected:	// Member Variables and Classes		CReduceApp			*mTheApp;		BoundingBox			*mTheBoundingBox;		CrystalArray		*mTheXls;		CrystalArray		*mTheHoles;		short					mCurModel;#if TARGET_CPU_PPC		LQD3DViewerPane	*mTheBB3DView;		TQ3GroupObject		mBBGroup;		TQ3GroupObject		mXlGroup;		TQ3GroupObject		mHlGroup;		TQ3GroupObject		mLightGroup;		TQ3StorageObject	mStorageObj;		TQ3FileObject		mFileObj;		TQ3ViewObject		mView;				void						MakeBBModel();		void						MakeXlsModel();		void						MakeHolesModel();		void						MakeTriangle(Side &inSide, TQ3TriangleData &outTriDat);		void						MakeSphere(Crystal &inXl, TQ3EllipsoidData &outSphereDat,										TQ3ColorRGB &inColor, float inTrans);		TQ3Status				MySetTriangleVerticesDiffuseColor (TQ3GeometryObject triangle,										TQ3ColorRGB color);		TQ3FileObject			MyGetHandleFile();		TQ3RendererObject		MakeDefaultRenderer();		TQ3CameraObject		MakeDefaultCamera();		TQ3DrawContextObject	MakeDefaultDrawContext();		void						Save3DModel();		void						MakeAxes(TQ3GroupObject &ioGroup, float xMax, float yMax, float zMax);		TQ3StyleObject			MakeSubdivisionStyle();#endif};