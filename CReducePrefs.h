#include "CPreference.h"#pragma onceclass PrefStruct {	public:		Boolean		includeMeanCSD;		Boolean		includeMaxCSD;		Boolean		includeLogCSD;		Boolean		includeRegCSD;		Boolean		doQuadrat;		Boolean		doOthers;		Boolean		doRandomPt;		Boolean		make3DModel;		Boolean		outputSigmas;		Boolean		outputCrystals;		Boolean		outputR3STT;		Boolean		outputReduce;		Boolean		doImpingement;		SInt16		numClassesMeanCSD;		SInt16		numClassesMaxCSD;		SInt16		numClassesLogCSD;		SInt16		quadratNumPlacings;		SInt16		quadratNumReps;		SInt16		RPNumPlacings;		SInt16		RPNumReps;		float		maxValueMeanCSD;		float		deltaLRegCSD;		float		impingementMeanErr;		float		impingementMaxErr;		Boolean		doLMcfPcf;		SInt16		numNNDist;		SInt16		numCFOffsetVolPts;		float		EpanecnikovCVal;		SInt16		numQD3DEqPts;		SInt16		numQD3DLngPts;		SInt16		sampleShape;		SInt16		numEnvelopeRuns;		SInt16		greediness;		Boolean		inflateBBox;		Boolean		observabilityFilter;		float		crit1Factor;		float		crit2Factor;		Boolean		doShave;		Boolean		keepAspectRatios;		SInt16		shaveXYZ;		float		shaveIncrement;		SInt16		direction;		float		minPercent;		SInt16		minPopulation;		float		maxAspectRatio;		Boolean		smaller;		Boolean		ShaveSave;		Boolean		discardNegs;		Boolean		useRaeburn;		SInt16		confidence;		SInt32		seed;		SInt32		MCReps;		Boolean		tidyUp;		Boolean		useVolume;		SInt16		overlap;		Boolean		matchVF;		Boolean		makeDCEnv;		Boolean		verbose;		float		VFPercent;		Boolean		matchPDF;		float		discard;		Boolean		fixClaude;};class CReducePrefs : public CPreference {	public:		CReducePrefs();		~CReducePrefs();		PrefStruct *NewPrefStructWithDefaultValues();		void	WritePrefsToStream(PP::LStream& inStream, PrefStruct *inPrefs);		void	ReadPrefsFromStream(PP::LStream& inStream, PrefStruct *inPrefs);};