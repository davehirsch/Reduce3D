// ===========================================================================//	CFloatArray.cp// ===========================================================================//	#include	"CFloatArray.h"// ---------------------------------------------------------------------------//		¥ CFloatArray// ---------------------------------------------------------------------------//	Constructor for an empty CFloatArrayCFloatArray::CFloatArray(	LComparator	*inComparator,	Boolean		inKeepSorted)		: LArray(sizeof(float), inComparator, inKeepSorted){}// ---------------------------------------------------------------------------//		¥ ~CFloatArray// ---------------------------------------------------------------------------//	Destructor for CFloatArrayCFloatArray::~CFloatArray(){}// ---------------------------------------------------------------------------------//		¥ Pop// ---------------------------------------------------------------------------------floatCFloatArray::Pop(){	static Boolean NumFound;	static float outNum;		NumFound = FetchItemAt(GetCount(), &outNum);	if (NumFound)		RemoveItemsAt(1, GetCount());	else		throw ArrayIOErr();	return outNum;}// ---------------------------------------------------------------------------------//		¥ Push// ---------------------------------------------------------------------------------voidCFloatArray::Push(float *inNum){	InsertItemsAt(1, index_Last, inNum);}// ---------------------------------------------------------------------------------//		¥ Clear// ---------------------------------------------------------------------------------voidCFloatArray::Clear(){	RemoveItemsAt(index_Last, 1);}// ---------------------------------------------------------------------------//		¥ operator[]// ---------------------------------------------------------------------------floatCFloatArray::operator[](short inSub){	static float outNum;	FetchItemAt(inSub, &outNum);	return outNum;}// ---------------------------------------------------------------------------//		¥ Update// ---------------------------------------------------------------------------voidCFloatArray::Update(short index, float inNum){	AssignItemsAt(1, index, (void *) &inNum);}