//**************************************************************************************// Filename:	BBView.h// Copyright © 1997 <YourNameHere>. All rights reserved.//// Description:	////**************************************************************************************// Revision History:// Thursday, February 6, 1997 - Original//**************************************************************************************#pragma once#include <LView.h>class BoundingBox;class CReduceApp;class	LActiveScroller;class BBWindow;// Cut this to your registration Routine// URegistrar::RegisterClass(BBView::class_ID, (ClassCreatorFunc)BBView::CreateBBViewStream);class BBView: public PP::LView{	public:		class AllocFailed {};	// exception class	// Public Enums and Constants		enum { class_ID = 'BBvw' };		// Public Functions		// Stream Constructor for Registrar		static BBView*	CreateBBViewStream( PP::LStream	*inStream);		//Default Constructor							BBView();		// Note: Add non-stream constructors here				// Stream Constructor 							BBView( PP::LStream *inStream );		// Copy Constructor							BBView(const BBView& inBBView);		//Destructor		virtual				~BBView();				void				FinishCreateSelf();		void				DrawSelf();	protected:	// Member Variables and Classes		CReduceApp			*mTheApp;		BoundingBox			*mBBox;		PP::LGWorld				*mTheBBImageGW;		Boolean				mImageChanged;		OpenCPicParams		mThePicParams;		PicHandle			mTempPicture;		Rect					BBRect;		BBWindow				*mMyWindow;		Point					mDrawOffsets;			// Private Functions		// Defensive programming. No  operator=		BBView&			operator=(const BBView&);				void				PlotBBToGW();		void				CopyGWToMe();		void				ActuallyCalcAndDrawBBox(Rect &inRect);		void				AdjustLimits(short x, short y, short *minX, short *maxX,																	 short *minY, short *maxY);		void				MyDrawTriangle(Point pt1, Point pt2, Point pt3);		void				MyFillTriangle(Point pt1, Point pt2, Point pt3);};