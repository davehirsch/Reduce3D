//**************************************************************************************// Filename:	EnvelopeData.h// Copyright © 1997 <YourNameHere>. All rights reserved.//// Description:	////**************************************************************************************// Revision History:// Wednesday, October 1, 1997 - Original//**************************************************************************************#pragma once#include <fp.h>enum CFTypes {LKind, LgdKind, PCFKind, PCFgdKind, MCFKind, MCF3Kind, MCFgdKind, MCF3gdKind, OIKind, IIKind, QSMKind, CQSMKind, RPSMKind,				ARKind, MinSepKind, MeanSepKind, MNNRKind, MEVKind};class OneSet {	// holds the data for the CF's measured from one simulation	public:		double	*L;		double	*Lgd;		double	*PCF;		double	*PCFgd;		double	*MCF;		double	*MCF3;		double	*MCFgd;		double	*MCF3gd;		float		orderingIndex;		float		isolationIndex;		float		quadratStatMean;		float		circQuadratStatMean;		float		RPStatMean;		float		avramiRatio;		float		minSep;		float		meanSep;		float		meanNNRad;		float		meanExtV;};class EnvelopeData{	public:	// Public Enums and Constants			// Public Functions		//Default Constructor							EnvelopeData(short inEnvelopes, short inHPoints, Boolean inDoSigmas);		//Destructor		virtual				~EnvelopeData();		double				*GetArray(short inEnvNum, short inKind);		inline OneSet		*GetSet(short inEnvNum) {return &(mRuns[inEnvNum]);};		void				Clear();		void				ClearFirstCFs();		void				GetMeanAndSD(short inHNum, short inKind,										 double &outMean, double &outSD);		void				GetMinAndMax(short inHNum, short inKind, short inConfidence,										 double &outMean, double &outSD);		inline double		GetVal(short EnvNum, short inKind, short inHNum);	private:		// Member Variables and Classes		OneSet		*mRuns;		short		mNumEnv;		short		mNumH;		Boolean		mDoSigmas;			// Defensive programming. No copy constructor nor operator=							EnvelopeData(const EnvelopeData&);		EnvelopeData&			operator=(const EnvelopeData&);};